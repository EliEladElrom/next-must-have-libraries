{
  "name": "next-must-have-libraries",
  "title": "A Professional Starter React Nextjs with Must-Have Libraries (MHL)",
  "description": "A starter professional React using Nextjs",
  "version": "0.1.011",
  "license": "MIT",
  "author": {
    "name": "Eli Elad Elrom",
    "email": "elad.ny@gmail.com",
    "url": "https://elielrom.com"
  },
  "homepage": "https://elielrom.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/EliEladElrom/next-must-have-libraries"
  },
  "bugs": {
    "url": "https://github.com/EliEladElrom/next-must-have-libraries/issues"
  },
  "dependencies": {
    "@storyofams/next-password-protect": "1.5.14",
    "@types/styled-components": "5.1.16",
    "next": "12.0.6",
    "next-compose-plugins": "2.2.1",
    "next-optimized-images": "2.6.2",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-uuid": "1.0.2",
    "sass": "1.45.1",
    "styled-components": "5.3.3"
  },
  "keywords": [
    "next",
    "nextjs",
    "next js",
    "React",
    "React DOM v17",
    "Type Checker",
    "TypeScript",
    "Storybook",
    "Lint",
    "ESlint",
    "Eslint-config-next",
    "Mocking",
    "Mock Service Worker",
    "CSS-in-JS Modules",
    "Styled Components",
    "Unit Testing",
    "Jest",
    "react-testing-library",
    "E2E testing",
    "Cypress",
    "Test UI",
    "React Testing Library",
    "Format",
    "Prettier",
    "Git hooks",
    "Husky",
    "Useful utilities",
    "analyzer Bundle",
    "react-uuid (create unique Id)",
    "Generate templates"
  ],
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "export": "next export",
    "lint": "next lint",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook",
    "build-and-start-storybook": "build-storybook && npm run storybook",
    "clean-storybook": "rm -rf storybook-static",
    "test": "jest --env=jsdom --testPathIgnorePatterns test-utils.tsx cypress setupEnv.ts TemplateName.*",
    "test:watch": "jest --watch --env=jsdom --testPathIgnorePatterns test-utils.tsx cypress setupEnv.ts TemplateName.*",
    "test:ci": "jest --ci",
    "format": "prettier --write '**/*.{ts,tsx,scss,css,json}'",
    "analyze": "next build && source-map-explorer .next/static/**/*.js",
    "clean-next": "rm -rf .next",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:clean": "rm -rf cypress",
    "prepare": "husky install",
    "isready": "prettier --write 'pages/**/*.{ts,tsx,scss,css,json}' && next lint && jest --env=jsdom --testPathIgnorePatterns test-utils.tsx cypress setupEnv.ts && next build && source-map-explorer .next/static/**/*.js"
  },
  "devDependencies": {
    "@babel/core": "7.16.5",
    "@babel/plugin-syntax-jsx": "7.16.5",
    "@babel/preset-react": "7.16.5",
    "@storybook/addon-actions": "6.4.7",
    "@storybook/addon-essentials": "6.4.7",
    "@storybook/addon-links": "6.4.9",
    "@storybook/react": "6.4.9",
    "@testing-library/jest-dom": "5.16.1",
    "@testing-library/react": "12.0.0",
    "@testing-library/user-event": "13.5.0",
    "@types/react": "17.0.38",
    "@types/react-test-renderer": "17.0.1",
    "@typescript-eslint/eslint-plugin": "5.13.0",
    "babel-eslint": "10.1.0",
    "babel-jest": "27.0.6",
    "babel-loader": "8.2.3",
    "cypress": "9.2.0",
    "eslint": "8.5.0",
    "eslint-config-airbnb-typescript": "16.1.0",
    "eslint-config-next": "12.0.7",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-import": "2.25.3",
    "eslint-plugin-jest": "25.3.0",
    "eslint-plugin-jest-dom": "4.0.1",
    "eslint-plugin-jsx-a11y": "6.5.1",
    "eslint-plugin-react": "7.27.1",
    "eslint-plugin-react-hooks": "4.3.0",
    "eslint-plugin-testing-library": "5.0.1",
    "husky": "7.0.4",
    "identity-obj-proxy": "3.0.0",
    "jest": "27.4.3",
    "jest-dom": "4.0.0",
    "msw": "0.38.1",
    "prettier": "2.5.1",
    "react-test-renderer": "17.0.2",
    "testing-library": "0.0.2",
    "typescript": "4.6.2"
  },
  "msw": {
    "workerDirectory": "public"
  },
  "husky": {
    "hooks": {
      "pre-commit": "prettier --write 'components/**/*.{ts,tsx,scss,css,json}' && next lint && jest --env=jsdom --testPathIgnorePatterns test-utils.tsx cypress setupEnv.ts TemplateName.*"
    }
  }
}
